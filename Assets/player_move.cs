using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class player_move : MonoBehaviour
{
    public float moveSpeed = 2.0f;
    public float turnSpeed = 2.0f;
    private float xRotate = 0.0f;
    float hAxis;
    float vAxis;
    float mouseX = 0;
    float mouseY = 0;
    
    Vector3 moveVec;

    void Start()
    {
        
    }


    void Update()
    {

        Vector3 dir = new Vector3(
            Input.GetAxis("Horizontal"),
            0,
            Input.GetAxis("Vertical")
        );
        // 이동방향 * 속도 * 프레임단위 시간을 곱해서 카메라의 트랜스폼을 이동
        transform.Translate(dir * moveSpeed * Time.deltaTime);
        transform.Rotate(0f, Input.GetAxis("Mouse X") * 3, 0f, Space.World);
        transform.Rotate(-Input.GetAxis("Mouse Y") * 3, 0f, 0f);

        // float yRotateSize = Input.GetAxis("Mouse X") * turnSpeed;
        // 현재 y축 회전값에 더한 새로운 회전각도 계산
        // float yRotate = transform.eulerAngles.y + yRotateSize;

        //// 위아래로 움직인 마우스의 이동량 * 속도에 따라 카메라가 회전할 양 계산(하늘, 바닥을 바라보는 동작)
        //float xRotateSize = -Input.GetAxis("Mouse Y") * turnSpeed;
        // 위아래 회전량을 더해주지만 -45도 ~ 80도로 제한 (-45:하늘방향, 80:바닥방향)
        // Clamp 는 값의 범위를 제한하는 함수
        //  xRotate = Mathf.Clamp(xRotate + xRotateSize, -45, 80);

        // 카메라 회전량을 카메라에 반영(X, Y축만 회전)
        //    transform.eulerAngles = new Vector3(xRotate, yRotate, 0);


    }
}
